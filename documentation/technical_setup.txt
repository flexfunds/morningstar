NAV Processor - Technical Setup Guide
=================================

System Requirements
-----------------
1. Server Requirements
   - Python 3.7 or higher
   - Flask web framework
   - PostgreSQL database
   - SMTP server access
   - FTP server access
   - Google Drive API access

2. Client Requirements
   - Modern web browser (Chrome, Firefox, Safari, Edge)
   - JavaScript enabled
   - Internet connection

Installation
-----------
1. Clone the Repository
   ```bash
   git clone [repository-url]
   cd nav-processor
   ```

2. Create Virtual Environment
   ```bash
   python -m venv venv
   source venv/bin/activate  # On Windows: venv\Scripts\activate
   ```

3. Install Dependencies
   ```bash
   pip install -r requirements.txt
   ```

Environment Configuration
-----------------------
Create a .env file with the following variables:

1. API Configuration
   ```
   API_KEY=your-api-key
   PORT=8080
   ```

2. Database Configuration
   ```
   DB_HOST=localhost
   DB_PORT=5432
   DB_NAME=nav_processor
   DB_USER=username
   DB_PASSWORD=password
   ```

3. FTP Configurations
   ```
   ETPCAP2_FTP_HOST=host
   ETPCAP2_FTP_USER=user
   ETPCAP2_FTP_PASSWORD=password
   
   HFMX_FTP_HOST=host
   HFMX_FTP_USER=user
   HFMX_FTP_PASSWORD=password
   
   # Additional FTP configurations...
   ```

4. Email Configuration
   ```
   SMTP_HOST=smtp.gmail.com
   SMTP_PORT=587
   SMTP_USER=your-email
   SMTP_PASSWORD=your-password
   SMTP_USE_TLS=True
   ```

5. Google Drive Configuration
   ```
   GOOGLE_DRIVE_CREDENTIALS_PATH=path/to/credentials.json
   MORNINGSTAR_OUTPUT_FOLDER_ID=folder-id
   SIX_OUTPUT_FOLDER_ID=folder-id
   DRIVE_INPUT_FOLDER_ID=folder-id
   ```

Database Setup
-------------
1. Create Database
   ```sql
   CREATE DATABASE nav_processor;
   ```

2. Run Migrations
   ```bash
   flask db upgrade
   ```

3. Initialize Base Data
   ```bash
   flask init-db
   ```

Security Setup
-------------
1. API Key Configuration
   - Generate secure API key
   - Configure in .env file
   - Distribute to authorized users

2. SSL/TLS Setup
   - Install SSL certificate
   - Configure HTTPS
   - Update SMTP settings for TLS

3. File Permissions
   - Set appropriate permissions for upload directories
   - Configure backup locations
   - Secure credential files

Integration Setup
---------------
1. FTP Integration
   - Configure FTP credentials
   - Test connections
   - Set up automatic retry mechanism

2. Email Integration
   - Configure SMTP settings
   - Test email delivery
   - Set up email templates

3. Google Drive Integration
   - Set up service account
   - Configure OAuth 2.0
   - Test file operations

Monitoring Setup
--------------
1. Logging
   - Configure log rotation
   - Set up error logging
   - Enable audit logging

2. Performance Monitoring
   - Set up resource monitoring
   - Configure timeout settings
   - Implement rate limiting

3. Health Checks
   - Configure health check endpoint
   - Set up monitoring alerts
   - Implement backup procedures

Deployment
---------
1. Development
   ```bash
   flask run --debug
   ```

2. Production
   ```bash
   gunicorn -w 4 -b 0.0.0.0:8080 api:app
   ```

3. Docker Deployment
   ```bash
   docker build -t nav-processor .
   docker run -p 8080:8080 nav-processor
   ```

Maintenance
----------
1. Regular Tasks
   - Database backups
   - Log rotation
   - Certificate renewal
   - Security updates

2. Monitoring
   - Check system logs
   - Monitor disk space
   - Review error reports
   - Track API usage

3. Updates
   - Regular dependency updates
   - Security patches
   - Feature updates
   - Documentation updates

Troubleshooting
-------------
1. Common Issues
   - Database connection errors
   - FTP timeout issues
   - Email delivery problems
   - File permission issues

2. Debug Mode
   - Enable debug logging
   - Check error traces
   - Monitor system resources

3. Support
   - Technical documentation
   - Error code reference
   - Contact information
   - Escalation procedures 